/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2009 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0ms\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000000.0;
	SIMULATION_TIME = 1000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("duty")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("duty[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "duty";
}

SIGNAL("duty[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "duty";
}

SIGNAL("duty[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "duty";
}

SIGNAL("duty[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "duty";
}

SIGNAL("duty[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "duty";
}

SIGNAL("duty[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "duty";
}

SIGNAL("duty[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "duty";
}

SIGNAL("duty[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "duty";
}

SIGNAL("freq")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("freq[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "freq";
}

SIGNAL("freq[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "freq";
}

SIGNAL("freq[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "freq";
}

SIGNAL("freq[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "freq";
}

SIGNAL("freq[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "freq";
}

SIGNAL("freq[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "freq";
}

SIGNAL("freq[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "freq";
}

SIGNAL("freq[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "freq";
}

SIGNAL("pwm_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reset_n")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 50000;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
	}
}

TRANSITION_LIST("duty[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 13978.494;
		LEVEL 1 FOR 102688.172;
		LEVEL 0 FOR 883333.334;
	}
}

TRANSITION_LIST("duty[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 13978.494;
		LEVEL 0 FOR 28225.807;
		LEVEL 1 FOR 957795.699;
	}
}

TRANSITION_LIST("duty[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 13799.283;
		LEVEL 1 FOR 179.211;
		LEVEL 0 FOR 52240.143;
		LEVEL 1 FOR 933781.363;
	}
}

TRANSITION_LIST("duty[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66218.637;
		LEVEL 1 FOR 50448.029;
		LEVEL 0 FOR 883333.334;
	}
}

TRANSITION_LIST("duty[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 13799.283;
		LEVEL 0 FOR 28405.018;
		LEVEL 1 FOR 74462.365;
		LEVEL 0 FOR 883333.334;
	}
}

TRANSITION_LIST("duty[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 13978.494;
		LEVEL 0 FOR 52240.143;
		LEVEL 1 FOR 933781.363;
	}
}

TRANSITION_LIST("duty[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66218.637;
		LEVEL 1 FOR 50448.029;
		LEVEL 0 FOR 883333.334;
	}
}

TRANSITION_LIST("duty[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 66218.637;
		LEVEL 1 FOR 50448.029;
		LEVEL 0 FOR 883333.334;
	}
}

TRANSITION_LIST("freq[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000000.0;
	}
}

TRANSITION_LIST("freq[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000000.0;
	}
}

TRANSITION_LIST("freq[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000000.0;
	}
}

TRANSITION_LIST("freq[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000000.0;
	}
}

TRANSITION_LIST("freq[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000000.0;
	}
}

TRANSITION_LIST("freq[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000000.0;
	}
}

TRANSITION_LIST("freq[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000000.0;
	}
}

TRANSITION_LIST("freq[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000000.0;
	}
}

TRANSITION_LIST("pwm_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1441.15;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 0.071;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 3599.924;
			LEVEL 1 FOR 1440.005;
		}
		LEVEL 0 FOR 0.071;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 2226.571;
		LEVEL 1 FOR 0.445;
		LEVEL 0 FOR 1372.259;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 2560.0;
		}
		NODE
		{
			REPEAT = 4;
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 0.649;
			LEVEL 1 FOR 1440.005;
			LEVEL 0 FOR 1119.346;
		}
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 0.649;
		LEVEL 1 FOR 1440.005;
		LEVEL 0 FOR 787.572;
		LEVEL 1 FOR 172.428;
		LEVEL 0 FOR 0.071;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 0.283;
		LEVEL 1 FOR 59.812;
		LEVEL 0 FOR 19.18;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 0.649;
		LEVEL 1 FOR 1919.816;
		LEVEL 0 FOR 0.29;
		LEVEL 1 FOR 479.899;
		LEVEL 0 FOR 0.071;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 0.283;
		LEVEL 1 FOR 59.812;
		LEVEL 0 FOR 19.18;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 0.649;
		LEVEL 1 FOR 1919.816;
		LEVEL 0 FOR 0.29;
		LEVEL 1 FOR 479.899;
		LEVEL 0 FOR 0.071;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 0.283;
		LEVEL 1 FOR 59.812;
		LEVEL 0 FOR 19.18;
		LEVEL 1 FOR 2560.0;
		LEVEL 0 FOR 0.649;
		LEVEL 1 FOR 440119.816;
		NODE
		{
			REPEAT = 93;
			LEVEL 0 FOR 0.26;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 3119.924;
			LEVEL 1 FOR 1919.816;
		}
		LEVEL 0 FOR 0.26;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 3119.924;
		LEVEL 1 FOR 1158.855;
	}
}

TRANSITION_LIST("reset_n")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 79569.892;
		LEVEL 1 FOR 437992.832;
		LEVEL 0 FOR 481720.43;
		LEVEL 1 FOR 716.846;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "reset_n";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "freq";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10;
}

DISPLAY_LINE
{
	CHANNEL = "freq[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "freq[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "freq[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "freq[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "freq[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "freq[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "freq[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "freq[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "duty";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "duty[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "duty[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "duty[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "duty[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "duty[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "duty[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "duty[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "duty[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "pwm_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 27025;
	MASTER = TRUE;
}
;
